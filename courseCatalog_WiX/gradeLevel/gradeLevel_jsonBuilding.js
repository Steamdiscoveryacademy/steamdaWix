// ! @TODO: `K-K`,`1-1`...`12-12` 
// ! <---------- <gradeLevelDOCdb_builder>  ---------->
export function gradeLevelDOCdb_builder(minGrade,maxGrade){
    let gradeLevelComboArrayThis = gradeLevelCombinationGenerator(minGrade,maxGrade)
    let gradeLevelDOCdbThis = gradeLevel_jsonBuilder(gradeLevelComboArrayThis)
    return gradeLevelDOCdbThis
}
// ! <---------- </gradeLevelDOCdb_builder> ---------->
// ! <---------- <gradeLevel_jsonBuilder>  ---------->
export function gradeLevel_jsonBuilder(gradeLevelComboArray){
// export function gradeLevel_jsonBuilder(gradeLevelComboArray, kind = 'fullDocDbJSON'){
    // console.warn(`gradeLevelComboArray`)
    // console.dir(gradeLevelComboArray)
    
    // ø NOTE: parameter generated by code so that no validation HERE is necessary
    let gradeLevelDOCdb = {}
    let key = 'ZXZ'
    let low = 7
    let high = 777
    let highLowArray = []
    let fullArray = []
    let humanKey = ''
    let humanHyphenatedKey = ''
    let words = ''
    let gradeLevelTHIS = {}
    for (let index = 0; index < gradeLevelComboArray.length; index++) {
        const comboArray = gradeLevelComboArray[index]
        gradeLevelTHIS = {}
        gradeLevelTHIS.key = comboArray.shift()
        gradeLevelTHIS.low = comboArray.shift()
        gradeLevelTHIS.high = comboArray.shift()
        let wordJsonLow = gradeWords(gradeLevelTHIS.low)
        let wordJsonHigh = gradeWords(gradeLevelTHIS.high)
        gradeLevelTHIS.highLowArray = [gradeLevelTHIS.low,gradeLevelTHIS.high]
        let fullArray = []
        let lowWhile = gradeLevelTHIS.low
        while (lowWhile <= gradeLevelTHIS.high) {
            fullArray.push(lowWhile)
            lowWhile++ 
        }
        gradeLevelTHIS.fullArray = fullArray
        gradeLevelTHIS.humanKey = wordJsonLow.raw + wordJsonHigh.raw
        gradeLevelTHIS.humanHyphenatedKey = wordJsonLow.raw + '-' + wordJsonHigh.raw
        gradeLevelTHIS.humanAbbrvs = wordJsonLow.abbrv + ' - ' + wordJsonHigh.abbrv
        gradeLevelTHIS.humanWords = wordJsonLow.word + ' - ' + wordJsonHigh.word
        gradeLevelTHIS.humanPhrases = wordJsonLow.phrase + ' - ' + wordJsonHigh.phrase
        gradeLevelDOCdb[gradeLevelTHIS.key] = gradeLevelTHIS
    }
    // ! <---------- </gradeLevel_jsonBuilder> ---------->
    return gradeLevelDOCdb
}

export function gradeLevelCombinationGenerator(min,max){
    let gradeLevelCombination2dArray = []
    // ø <ELSE>
    if(min >= max){
        return gradeLevelCombination2dArray
    }
    // ø </ELSE>
    let key = 'GL01'
    let combo = [key,0,1]
    for (let low = min; low < max; low++) {
        for (let high = low + 1; high <= max;   high++) {
            key = 'GL' + low.toString() + high.toString()
            combo = [key,low,high]
            gradeLevelCombination2dArray.push(combo)
        }
    }
    let kind = 'fullDocDbJSON'
    if(kind === 'fullDocDbJSON'){
        console.warn(`//gradeLevelCombination2dArray`)
        console.dir(gradeLevelCombination2dArray)
        // return gradeLevelCombination2dArray

    }
    if(kind === 'humanKeyObject'){
        let fullKeyArray = Object.keys(gradeLevelCombination2dArray)
        console.warn(`fullKeyArray: [array below]`)
        console.log(`fullKeyArray: `)
        console.dir(fullKeyArray)

    }
}

// ! ================================================================================
// ! ======================================================================  <RUNNER>
// ! ================================================================================
let minGradeThis = 0
let maxGradeThis = 12
let gradeLevelDOCdb_dot_json = gradeLevelDOCdb_builder(minGradeThis,maxGradeThis)
console.warn(`//gradeLevelDOCdb.json = `)
console.warn(JSON.stringify(gradeLevelDOCdb_dot_json))

// let gradeLevelComboArrayThis = [["GL02",0,2],["GL35",3,5],["GL68",6,8],["GL912",9,12]]
// let gradeLevelDOCdbThis = gradeLevel_jsonBuilder(gradeLevelComboArrayThis)
// console.warn(`//gradeLevelDOCdb.json = `)
// console.warn(JSON.stringify(gradeLevelDOCdbThis))
// let gradeLevelhumanKeyObjectThis = gradeLevel_jsonBuilder(gradeLevelComboArrayThis, 'humanKeyObject')
// console.warn(`//gradeLevelDOCdb.json = `)
// console.warn(JSON.stringify(gradeLevelhumanKeyObjectThis))

// • ================================================================================
// • ============================================================  <HELPER FUNCTIONS>
// • ============================================================
export function gradeWords(grade){
    let wordJSON = {}
    // ø <ELSE>
    let gradeIsValid = true
    gradeIsValid = typeof grade !== 'number' ? false : gradeIsValid
    gradeIsValid = grade < 0 ? false : gradeIsValid
    gradeIsValid = grade > 12 ? false : gradeIsValid
    gradeIsValid = grade !== Math.abs(grade) ? false : gradeIsValid
    gradeIsValid = grade !== Math.floor(grade) ? false : gradeIsValid
    if(grade < 0){
        wordJSON.raw = ''
        wordJSON.abbrv = ''
        wordJSON.word = ''
        wordJSON.phrase = ''
        return wordJSON
    }
    // ø </ELSE>
    const rawArray = ['K','1','2','3','4','5','6','7','8','9','10','11','12']
    const abbrvArray = ['K','1st','2nd','3rd','4th','5th','6th','7th','8th','9th','10th','11th','12th']
    const wordArray = ['Kindergarten','First','Second','Third','Fourth','Fifth','Sixth','Seventh','Eighth','Ninth','Tenth','Eleventh','Twelfth']
    const phraseArray = ['Kindergarten','First Grade','Second Grade','Third Grade','Fourth Grade','Fifth Grade','Sixth Grade','Seventh Grade','Eighth Grade','Ninth Grade','Tenth Grade','Eleventh Grade','Twelfth Grade']
    wordJSON.raw = rawArray[grade]
    wordJSON.abbrv = abbrvArray[grade]
    wordJSON.word = wordArray[grade]
    wordJSON.phrase = phraseArray[grade]
    return wordJSON
}
// • ============================================================
// • ============================================================ </HELPER FUNCTIONS>
// • ================================================================================

// ø ================================================================================
// ø ============================================================ <COMPONENT TESTING>
// ø ================================================================================
// let finalGradeLevelCombination2dArray = gradeLevelCombinationGenerator(0,12)
// console.warn(`finalGradeLevelCombination2dArray: [array below]`)
// console.dir(finalGradeLevelCombination2dArray)